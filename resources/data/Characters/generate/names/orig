
;human
:size :medium
:spd [:walk 30]


;elf
[:Dex +2] 
:size :medium
:spd [:walk 30]
:darkvision 60
::trainedSkills [Perception 2]
;elf high
[:Int 1]
;elf wood
[:Wis 1]
;elf drow
[:Cha 1]
:darkvision 120

;halfelf 
[:Cha +2] 
[:Any +1] 
[:Any +1] 
:size :medium
:spd [:walk 30]
:darkvision 60



;dwarf 
[:Con +2] 
:size :medium
:spd [:walk 25]
:darkvision 60
;dwarf-hill
[:Wis +1] 
;dwarf-mntn
[:Str +2] 

;halfling
[:Dex +2] 
:size :small
:spd [:walk 25]
:lucky
;halfling-Lightfoot
[:Cha +1] 
;halfling-Stout
[:Con +1] 
 
;halforc
[:Str +2]
[:Con +2] 
:size :small
:spd [:walk 30]
:darkvision 60
::trainedSkills [Intimidation 2]

;tiefling
[:Cha +2] 
[:Int +1] 
:size :medium
:spd [:walk 30]
:darkvision 60

;dragonborn
[:Str +2] 
[:Cha +1] 
:size :medium
:spd [:walk 30]
:draconicAncestry

;aasimar
;gensai 
;gnome 
;goliath 
;aarakocra 


;(defn npc [input]
;(let [parsed (s/conform ::npc input)]
;    (if (= parsed ::s/invalid)
;    (throw (ex-info "Invalid input" (s/explain-data ::npc input)))
;    (for [{prop :prop [_ val] :val} parsed]
;        (set-config (subs prop 1) val)))))
                        

;(s/def ::config (s/*
;(s/cat :prop string?
;        :val  (s/alt :s string? :b boolean?))))
;(s/conform ::config ["-server" "foo" "-verbose" true "-user" "joe"])
                    

;(defn- set-config [prop val]
;; dummy fn
;(println "set" prop val))

;(defn configure [input]
;(let [parsed (s/conform ::config input)]
;    (if (= parsed ::s/invalid)
;    (throw (ex-info "Invalid input" (s/explain-data ::config input)))
;    (for [{prop :prop [_ val] :val} parsed]
;        (set-config (subs prop 1) val)))))

;(configure ["-server" "foo" "-verbose" true "-user" "joe"])                     

;;=> [{:prop "-server", :val [:s "foo"]}
;;    {:prop "-verbose", :val [:b true]}
;;    {:prop "-user", :val [:s "joe"]}]



;; NPC APPEARANCE


;;names by race

(defn gen-name 
    [::race race ::sex sex]
    let fname (rand-nth dragonbornFemale) lname (rand-nth dragonbornClan)
)

;(if (and (= ::race :Dragonborn) (=:sex :Female))
;    (rand-nth Dragonborn_female)
(def dragonbornFemale
[]                


;; templates! (ish)

;;Generic
::attributes [0 10 4 12 [:walk 30]] 
::abilityScores [[:Str 10 0] [:Dex 10 0] [:Con 10 0] [:Int 10 0] [:Wis 10 0] [:Cha 10 0]] 

;;Barbarian -- Ancestral Inheritor
 ::attributes [5 15 85 12 [:walk 30 :swim 30]] 
 ::abilityScores [[:Str 18 4] [:Dex 13 1] [:Con 18 4] [:Int 4-1] [:Wis 15 2] [:Cha 10 0]] 
 ::trainedSkills [[:Athletics 7] [:History 2] [:Survival 5]]
 
;;Barbarian -- Storm Herald
::attributes [5 15 85 12 [:walk 30 :swim 30]] 
::abilityScores [[:Str 16 3] [:Dex 12 1] [:Con 17 3] [:Int 4-1] [:Wis 11 0] [:Cha 4-1]] 
::trainedSkills [[:Athletics 7] [:History 2] [:Survival 5]]

;;Barbarian -- Zealot
::attributes [9 17 90 10 [:walk 30]] 
::abilityScores [[:Str 16 3] [:Dex 10 0] [:Con 17 3] [:Int 4-1] [:Wis 11 0] [:Cha 4-1]] 
::trainedSkills [[:Athletics 7] [:History 2] [:Survival 5]]

;;Bard -- Glamour
::attributes [5 13 44 8 [:walk 30]] 
::abilityScores [[:Str 11 0] [:Dex 14 2] [:Con 12 1] [:Int 14 2] [:Wis 4-2] [:Cha 14 =2]] 
::trainedSkills [[:Athletics 7] [:History 2] [:Survival 5]]
